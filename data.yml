---
description: >
  Code Park opens fun coding experiences to students in the Houston area.


  In our classes, students focus on fundamental coding skills and work
  on real world projects. They get the hands-on experience they need
  to continue their own journeys as coders.

workshops:
  - title: Make our own block puzzle game
    description: >
      In this series, we will be building our own web-based
      [Sokoban](https://en.wikipedia.org/wiki/Sokoban) game.  Students will learn
      how to code the game as well as design their own visual elements to use
      in the game.


      ![](https://upload.wikimedia.org/wikipedia/commons/4/4b/Sokoban_ani.gif)


      <small>Example game from [Wikipedia](https://en.wikipedia.org/wiki/Sokoban).</small>

    objectives:
      - name: Game tiles
      - name: Coding in JavaScript
      - name: User interactions with software
      - name: Using loops
      - name: Organizing code
    sessions:
      - title: What are we making?
        description: >
          In this class, we will play some [Sokoban](https://en.wikipedia.org/wiki/Sokoban)
          games and share that we will be building our own versions.  We will
          have a discussion to break down a Sokoban game into different parts:

            1. The player that we can control
            1. The map
            1. The blocks that can be pushed
            1. Whether the player has won

          We will also discuss what the rules are.  All conclusions from this class
          will be written on a large piece of paper and brought to each of the
          following classes.

      - title: Our player starts
        description: >
          We introduce students to how we will be coding in the class.  Students begin
          coding the player by using a stand-in image and placing the player in the center
          of the screen.  Students also design a personalized player "sprite" and come
          up with a theme for their game.

      - title: Our player moves
        description: >
          This class starts with a game of "Simon Says" with a discussion of how it relates
          to the challenge of coding our player to move.


          We challenge students to describe how to control the player and how to move the
          player.  The steps and instructions are written down as "pseudocode."
          Students will be shown event listeners and how to move the player separately.
          They will be challenged to move the player on keypress as the class described in
          the pseudocode.

      - title: Our player can push a block

      - title: Making the puzzle based on game maps

      - title: Wrap-up, demonstrations, and game developer visitor         

  - title: 3D Animations/VR
    description: >
      In this series, students will be introduced to building 3D scenes and
      animating them.  By the end, they will have a version of the following
      scene:

      ![](./assets/aviator.gif)


      <small>Scene and code will be adapted from this
      [online tutorial](https://tympanus.net/codrops/2016/04/26/the-aviator-animating-basic-3d-scene-threejs/).</small>

    objectives:
      - name: 3D spatial reasoning
      - name: Lighting and cameras in 3D scenes
      - name: Principles of animation
      - name: Coding in JavaScript
      - name: Object-oriented programming

    sessions:
      - title: What are we making?
        description: >
          In this class, we will demonstrate the scene we will be building
          together on the computer.  We are also going to have simple cut-out
          and fold paper activity to recreate the scene in real life as teams
          to demonstrate the idea of following directions to build a scene.
          We will discuss what was easy or difficult about the activity.


          We will also have a discussion with the students about any
          animated 3D movies or videos they may have seen to relate
          how the scenes may be constructed to the principles
          we will cover.

      - title: Shapes on a scene
        description: >
          This class will cover how we will be working together throughout
          the rest of our classes, how we will be coding our project, and
          how we can share our projects.


          Students will learn vocabulary such as `scene` and `mesh`.  We will
          end the class having changed the scene's background, placed a mesh
          on the scene, and view the scene on our phones.

      - title: A shapes factory
        description: >
          This class will focus on making the clouds in the scene out of multiple
          other shapes, and we can tell the computer to quickly make many different
          clouds.  We will point out how once we had instructions for the computer to
          follow about making clouds, we could use "Object-oriented" code to make
          many clouds easily, something that was more tedious when we were making the
          scene by hand.

      - title: Lights, camera, action
        description: >
          In this class, we will make the sea together, add lighting, and a camera.
          We will experiment with the lighting to show how it affects the scene, and look
          at scenes from 3D animated movies to discuss how they make us feel, and how that
          is being acheived.

      - title: More complex shapes
        description: >
          We will build a plane made of several shapes and use the visual inspector to
          help us edit the plane.

      - title: Animation
        description: >
          In this class, we will animate the sky, sea, and plane.  We will introduce the
          concept of animation using sketches and a flip book, demonstrate updating an
          animation one frame at time, and finally letting the animation run automatically. 

          We will have a discussion about animations in movies and how different objects
          and characters appear life-like.

      - title: Wrap up and demonstrations
        description: >
          This is the last class of this series!  We will work a little more on our
          animations to experiment, share them, and have a guest animator come share
          their experience as a professional.

  - title: Web/App Design and Development


  - title: Data Visualization
    costs: 

    age_range:

    description: >
      this is a description
    objectives:
    sessions:
      - title: Hands-on "data sculpture"
        description: >
          Shared data set with hands-on materials for students
          to collaborate in groups on.  As a class, walk to each
          visualization and have students share.

          A discussion about what data visualization is,
          where students might've seen examples of it
          through their life. When might they use data visualization?

          Also, facilitate a poll/survey -- physical and fun if possible
          as a way to collect data for the next class.

      - title: What will we be making?
        description: >
          A demonstration of different resulting projects, and looking
          at existing data visualizations and discussing/critiquing in
          groups.

          Start planning 

      - title: 

      - title: Career visitor and continued project work


  - title: Beat Maker, application/software
  - title: Beat Maker, hardware
  - title: Build your own robot

    sessions:
      - title: 


  # the following will be single or double session workshops

  - title: Coding Python in Minecraft
    description: >
      This class is an introduction to coding for students aged
      12-18 using Minecraft: Pi Edition and Python.
      With Coding in Minecraft, students will learn real world
      programming skills through guided lessons, creating their
      own in-game content along the way.

  - title: What is electricity?
    description: >
      This series of workshops help students experiment with electricity and build
      an intuition for how circuits work.
    sessions:
      - title: Squishy circuits
        description: >
          Using simple ingredients, the class makes a batch of "squishy circuits."
          Students will then use pre-made squishy circuits and batteries to power
          LEDs in creative shapes.  Along the way, students will learn about how
          electrons flow like water.

      - title: Take apart a machine and intro to breadboard
        description: >
          Students take apart a simple machine to examine and learn how electronics
          are built.  Then, we will build a simple circuit and learn about how
          breadboards work.

  - title: Converting images to ASCII Art with Python
    description: >
      Students will be guided through a program in Python that converts photos
      and cartoon images to ASCII art, images made purely from text.
      Along the way, theyâ€™ll learn a little about pixels, how computers
      manipulate images, and using loops to code repetitive tasks.
      At the end of class, students can have their ASCII art printed out to take home.
    objectives:
      - name: Pixels and how photos are stored in computers
      - name: How do computers represent color
      - name: Resizing images
      - name: Using computers for repetitive tasks

  - title: What does sound look like?
    is_ready: false
    description: >
      What does sound look like?  This workshop is a visual exploration of waves
      and math, inspired by [this talk](https://greyscalegorilla.com/tutorials/mike-the-monkey-halfrez-2015-deconstructing-sound/).

  - title: 3D printing
    is_ready: false

  - title: Architecture design
    is_ready: false
